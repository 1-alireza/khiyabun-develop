apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'com.facebook.react'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdk rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.khiyabun.khiyabun"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging false
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.react:flipper-integration:${rootProject.ext.flipperVersion}") // Set Flipper version here

    // Firebase dependencies
    implementation platform('com.google.firebase:firebase-bom:33.1.2')
    implementation 'com.google.firebase:firebase-analytics'

    // Add Fresco dependencies conditionally based on configuration
    if (project.hasProperty("expo.gif.enabled") && project.property("expo.gif.enabled") == "true") {
        implementation "com.facebook.fresco:animated-gif:${reactAndroidLibs.versions.fresco.get()}"
    }
    if (project.hasProperty("expo.webp.enabled") && project.property("expo.webp.enabled") == "true") {
        implementation "com.facebook.fresco:webpsupport:${reactAndroidLibs.versions.fresco.get()}"
    }
    if (project.hasProperty("expo.webp.animated") && project.property("expo.webp.animated") == "true") {
        implementation "com.facebook.fresco:animated-webp:${reactAndroidLibs.versions.fresco.get()}"
    }
}

// Apply native modules if needed
apply from: new File(["node", "--print", "require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim(), "../native_modules.gradle");
applyNativeModulesAppBuildGradle(project)
